name: CD
on: [push]
# on:
#   push:
#     branches:
#       - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22

      - name: Build
        working-directory: authentication
        run: GOOS=linux GOARCH=arm64 go build -tags lambda.norpc -o bootstrap cmd/main.go

      - name: Zip
        working-directory: authentication
        run: | # GOOS=linux GOARCH=arm64 go build -tags lambda.norpc -o bootstrap cmd/main.go && zip lambda_function.zip bootstrap
          zip -j lambda_function.zip bootstrap

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
    
      - name: Terraform Plan
        working-directory: ./terraform
        run: | #terraform plan -input=false -var-file="terraform.tfvars"
              terraform plan -input=false
      
      - name: Terraform Apply Deploy
        if: github.ref_name == 'dev'
        run: |
          # terraform apply -auto-approve -input=false -var-file="terraform.tfvars"
          terraform apply -auto-approve -input=false

      # - name: Upload Zip
      #   if: ${{github.ref_name}} == 'main'
      #   working-directory: authentication
      #   run: aws lambda update-function-code --function-name authentication --zip-file fileb://lambda_function.zip
